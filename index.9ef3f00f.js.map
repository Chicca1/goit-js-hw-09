{"mappings":"YAeO,SAASA,EAAgBC,GAC9B,IAAMC,EAAM,wDAAgEC,OAARF,GAEpE,OAAOG,MAAMF,EAAK,CAChBG,QAAS,CACP,YAAa,2EAGdC,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,G,OAAQA,C,IACbC,OAAM,SAAAC,GAEL,MADAC,QAAQD,MAAM,sBAAuBA,GAC/BA,C,ICxBZ,IAAME,EAASC,SAASC,cAAc,WAChCC,EAAcF,SAASC,cAAc,iBACrCE,EAAUH,SAASC,cAAc,aACjCG,EAAWJ,SAASC,cAAc,cAClCI,EAAYL,SAASC,cAAc,eACnCK,EAAcN,SAASC,cAAc,gBACrCM,EAAcP,SAASC,cAAc,gBACrCO,EAAQR,SAASC,cAAc,UAGrC,SAASQ,IACPV,EAAOW,MAAMC,QAAU,M,CAIzB,SAASC,IACPb,EAAOW,MAAMC,QAAU,O,CAIzB,SAASE,IACPL,EAAME,MAAMC,QAAU,M,CAIxB,SAASG,IACPN,EAAME,MAAMC,QAAU,O,CAIxB,SAASI,EAAc5B,GACrByB,IACAC,IACAV,EAAQO,MAAMC,QAAU,OAExBzB,EAAgBC,GACbK,MAAK,SAAAG,GACJ,IAAMqB,EAAMrB,EAAK,GACjBS,EAASa,IAAMD,EAAI5B,IACnBiB,EAAUa,YAAcF,EAAIG,OAAO,GAAGC,KACtCd,EAAYY,YAAcF,EAAIG,OAAO,GAAGE,YACxCd,EAAYW,YAAcF,EAAIG,OAAO,GAAGG,YACxCnB,EAAQO,MAAMC,QAAU,O,IAEzBf,OAAM,WACLkB,G,IAEDS,SAAQ,WACPd,G,IAeNP,EAAYsB,iBAAiB,UAAU,SAAAC,GAErCV,EADgBU,EAAMC,OAAOC,M,IAK/Bf,IACAC,IDvESvB,MAAM,sCAAuC,CAClDC,QAAS,CACP,YAAa,2EAGdC,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,G,OAAQA,C,IACbC,OAAM,SAAAC,GAEL,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,C,ICiETL,MAAK,SAAA2B,IApBR,SAA6BA,GAC3BA,EAAOS,SAAQ,SAAAC,GACb,IAAMC,EAAS9B,SAAS+B,cAAc,UACtCD,EAAOH,MAAQE,EAAMG,GACrBF,EAAOZ,YAAcW,EAAMT,KAC3BlB,EAAY+B,YAAYH,E,IAgBxBI,CAAoBf,GACpBV,G,IAEDb,OAAM,WACLkB,IACAL,G","sources":["src/js/cat-api.js","src/js/index.js"],"sourcesContent":["\nexport function fetchBreeds() {\n  return fetch('https://api.thecatapi.com/v1/breeds', {\n    headers: {\n      'x-api-key': 'live_Irm4tj1sTM90OaI4p93j1uGBknX1wNeOFv6k8ufRlok3tRYdEMDG6ugOkfc4B5Af'\n    }\n  })\n    .then(response => response.json())\n    .then(data => data)\n    .catch(error => {\n      console.error('Error fetching breeds:', error);\n      throw error;\n    });\n}\n\nexport function fetchCatByBreed(breedId) {\n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': 'live_Irm4tj1sTM90OaI4p93j1uGBknX1wNeOFv6k8ufRlok3tRYdEMDG6ugOkfc4B5Af'\n    }\n  })\n    .then(response => response.json())\n    .then(data => data)\n    .catch(error => {\n      console.error('Error fetching cat:', error);\n      throw error;\n    });\n}\n","\nimport { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst loader = document.querySelector('.loader');\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst catImage = document.querySelector('.cat-image');\nconst breedName = document.querySelector('.breed-name');\nconst description = document.querySelector('.description');\nconst temperament = document.querySelector('.temperament');\nconst error = document.querySelector('.error');\n\n// Function to hide the loader\nfunction hideLoader() {\n  loader.style.display = 'none';\n}\n\n// Function to show the loader\nfunction showLoader() {\n  loader.style.display = 'block';\n}\n\n// Function to hide the error message\nfunction hideError() {\n  error.style.display = 'none';\n}\n\n// Function to show the error message\nfunction showError() {\n  error.style.display = 'block';\n}\n\n// Function to update the cat info based on the selected breed\nfunction updateCatInfo(breedId) {\n  showLoader();\n  hideError();\n  catInfo.style.display = 'none';\n\n  fetchCatByBreed(breedId)\n    .then(data => {\n      const cat = data[0];\n      catImage.src = cat.url;\n      breedName.textContent = cat.breeds[0].name;\n      description.textContent = cat.breeds[0].description;\n      temperament.textContent = cat.breeds[0].temperament;\n      catInfo.style.display = 'block';\n    })\n    .catch(() => {\n      showError();\n    })\n    .finally(() => {\n      hideLoader();\n    });\n}\n\n// Function to populate the breed select options\nfunction populateBreedSelect(breeds) {\n  breeds.forEach(breed => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    breedSelect.appendChild(option);\n  });\n}\n\n// Event listener for breed select change\nbreedSelect.addEventListener('change', event => {\n  const breedId = event.target.value;\n  updateCatInfo(breedId);\n});\n\n// Initialization\nshowLoader();\nhideError();\n\nfetchBreeds()\n  .then(breeds => {\n    populateBreedSelect(breeds);\n    hideLoader();\n  })\n  .catch(() => {\n    showError();\n    hideLoader();\n  });\n"],"names":["$8994e83c1b13b9e2$export$57b7d3a597416aa2","breedId","url","concat","fetch","headers","then","response","json","data","catch","error","console","$44ae6d9db4eaca0f$var$loader","document","querySelector","$44ae6d9db4eaca0f$var$breedSelect","$44ae6d9db4eaca0f$var$catInfo","$44ae6d9db4eaca0f$var$catImage","$44ae6d9db4eaca0f$var$breedName","$44ae6d9db4eaca0f$var$description","$44ae6d9db4eaca0f$var$temperament","$44ae6d9db4eaca0f$var$error","$44ae6d9db4eaca0f$var$hideLoader","style","display","$44ae6d9db4eaca0f$var$showLoader","$44ae6d9db4eaca0f$var$hideError","$44ae6d9db4eaca0f$var$showError","$44ae6d9db4eaca0f$var$updateCatInfo","cat","src","textContent","breeds","name","description","temperament","finally","addEventListener","event","target","value","forEach","breed","option","createElement","id","appendChild","$44ae6d9db4eaca0f$var$populateBreedSelect"],"version":3,"file":"index.9ef3f00f.js.map"}