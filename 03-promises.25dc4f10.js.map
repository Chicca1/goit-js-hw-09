{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SAClBD,SAASC,cAAc,cACzCF,EAAKG,iBAAiB,UAAWC,IAE/B,MAAMC,KAAEA,EAAMb,MAAAc,EAAKC,OAAEA,GAAWP,EAAKQ,SAE/BC,EAAaC,SAASJ,EAAMK,OAC5BC,EAAYF,SAASL,EAAKM,OAC1BE,EAAcH,SAASH,EAAOI,OAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,IAC/BxB,EAAcwB,EAAGL,EAAaK,EAAIF,GAC/BG,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,SAASC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEzE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,SAASC,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEvEwB,SAASC,OAAOI,KAAK,CACnBC,QAAS,MAOftB,EAAKuB,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconst createBtn = document.querySelector('#createBtn');\nform.addEventListener('submit', (event) => {\n\n  const { step, delay, amount } = form.elements;\n\n  const delayInput = parseInt(delay.value);\n  const stepInput = parseInt(step.value);\n  const amountInput = parseInt(amount.value);\n\n  for (let i = 0; i < amountInput; i++) {\n    createPromise(i, delayInput + i * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`,);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      Notiflix.Notify.Init({\n        timeout: 5000 \n      });\n      \n     \n      \n  }\n\n  form.reset();\n});\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","step","delay1","amount","elements","delayInput","parseInt","value","stepInput","amountInput","i","then","Notiflix","Notify","Success","catch","Failure","Init","timeout","reset"],"version":3,"file":"03-promises.25dc4f10.js.map"}