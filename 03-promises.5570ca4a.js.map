{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAOC,SAASC,cAAc,SAClBD,SAASC,cAAc,cACzCF,EAAKG,iBAAiB,UAAU,SAACC,GAQ/B,IANA,IAAgCC,EAAAL,EAAKM,SAA7BC,EAAwBF,EAAxBE,KAAMC,EAAkBH,EAAlBb,MAAOiB,EAAWJ,EAAXI,OAEfC,EAAaC,SAASH,EAAMI,OAC5BC,EAAYF,SAASJ,EAAKK,OAC1BE,EAAcH,SAASF,EAAOG,OAE3BG,EAAI,EAAGA,EAAID,EAAaC,IAC/BzB,EAAcyB,EAAGL,EAAaK,EAAIF,GAC/BG,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,SAASC,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEvE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,SAASC,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAIzEQ,EAAKwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconst createBtn = document.querySelector('#createBtn');\nform.addEventListener('submit', (event) => {\n\n  const { step, delay, amount } = form.elements;\n\n  const delayInput = parseInt(delay.value);\n  const stepInput = parseInt(step.value);\n  const amountInput = parseInt(amount.value);\n\n  for (let i = 0; i < amountInput; i++) {\n    createPromise(i, delayInput + i * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  form.reset();\n});\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","_elements","elements","step","delay1","amount","delayInput","parseInt","value","stepInput","amountInput","i","then","param","Notiflix","Notify","Success","concat","catch","Failure","reset"],"version":3,"file":"03-promises.5570ca4a.js.map"}